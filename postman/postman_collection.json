{
	"info": {
		"_postman_id": "a46717d6-4dd5-40c6-b325-a9cbf2e2df9b",
		"name": "Phantasma Explorer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "Returns the Addresses on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has addresses values', function(){",
									"  pm.expect(jsonData).to.have.property(\"addresses\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/addresses?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&address=&address_name=&address_partial=&organization_name=&validator_kind=Primary&with_storage=0&with_stakes=0&with_balance=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"addresses"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, address or address_name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "address",
									"value": "",
									"description": "hash of an address"
								},
								{
									"key": "address_name",
									"value": "",
									"description": "Name of an Address, if is has one"
								},
								{
									"key": "address_partial",
									"value": "",
									"description": "partial hash of an address"
								},
								{
									"key": "organization_name",
									"value": "",
									"description": "Filter for an Organization Name\""
								},
								{
									"key": "validator_kind",
									"value": "Primary",
									"description": "Filter for a Validator Kind"
								},
								{
									"key": "with_storage",
									"value": "0",
									"description": "returns data with <a href=\"#model-AddressStorage\">AddressStorage</a>"
								},
								{
									"key": "with_stakes",
									"value": "0",
									"description": "returns data with <a href=\"#model-AddressStake\">AddressStake</a>"
								},
								{
									"key": "with_balance",
									"value": "0",
									"description": "returns data with <a href=\"#model-AddressBalances\">AddressBalances</a>"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-AddressResult\">AddressResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/addresses?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&address=&address_name=&address_partial=&organization_name=&validator_kind=Primary&with_storage=0&with_stakes=0&with_balance=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"addresses"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_name",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "organization_name",
											"value": ""
										},
										{
											"key": "validator_kind",
											"value": "Primary"
										},
										{
											"key": "with_storage",
											"value": "0"
										},
										{
											"key": "with_stakes",
											"value": "0"
										},
										{
											"key": "with_balance",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 10725067,\n  \"addresses\": [\n    {\n      \"address\": \"aute magna\",\n      \"address_name\": \"amet proident sed\",\n      \"validator_kind\": \"sint fugiat\",\n      \"stake\": \"dolor consequat Duis\",\n      \"unclaimed\": \"nisi adipisicing dolor\",\n      \"relay\": \"ex sint\",\n      \"storage\": {\n        \"available\": 71846854,\n        \"used\": 79633040,\n        \"avatar\": \"nulla qui laborum\"\n      },\n      \"stakes\": {\n        \"amount\": \"i\",\n        \"time\": -77495802,\n        \"unclaimed\": \"cillum sint pariatur amet\"\n      },\n      \"balances\": [\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain\": {\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_height\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"amount\": \"pariatur\"\n        },\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain\": {\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_height\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"amount\": \"culpa et in\"\n        }\n      ]\n    },\n    {\n      \"address\": \"irure\",\n      \"address_name\": \"deserunt sed dolore in\",\n      \"validator_kind\": \"aute tempor\",\n      \"stake\": \"dolor esse\",\n      \"unclaimed\": \"ut occaecat\",\n      \"relay\": \"reprehenderit in mollit incididunt\",\n      \"storage\": {\n        \"available\": 51466984,\n        \"used\": 96704825,\n        \"avatar\": \"in reprehenderit sint in\"\n      },\n      \"stakes\": {\n        \"amount\": \"sunt consequat\",\n        \"time\": 3722381,\n        \"unclaimed\": \"nulla dolore Duis\"\n      },\n      \"balances\": [\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain\": {\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_height\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"amount\": \"do in reprehenderit \"\n        },\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain\": {\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_height\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"amount\": \"sit laboris minim labore\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/addresses?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&address=&address_name=&address_partial=&organization_name=&validator_kind=Primary&with_storage=0&with_stakes=0&with_balance=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"addresses"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_name",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "organization_name",
											"value": ""
										},
										{
											"key": "validator_kind",
											"value": "Primary"
										},
										{
											"key": "with_storage",
											"value": "0"
										},
										{
											"key": "with_stakes",
											"value": "0"
										},
										{
											"key": "with_balance",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/addresses?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&address=&address_name=&address_partial=&organization_name=&validator_kind=Primary&with_storage=0&with_stakes=0&with_balance=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"addresses"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_name",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "organization_name",
											"value": ""
										},
										{
											"key": "validator_kind",
											"value": "Primary"
										},
										{
											"key": "with_storage",
											"value": "0"
										},
										{
											"key": "with_stakes",
											"value": "0"
										},
										{
											"key": "with_balance",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Blocks information from backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has block values', function(){",
									"  pm.expect(jsonData).to.have.property(\"blocks\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/blocks?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&height=&chain=main&date_less=&date_greater=&with_transactions=0&with_events=0&with_event_data=0&with_nft=0&with_fiat=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"blocks"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or hash"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "hash",
									"value": "",
									"description": "block hash"
								},
								{
									"key": "hash_partial",
									"value": "",
									"description": "hash (partial match)"
								},
								{
									"key": "height",
									"value": "",
									"description": "height of the <a href=\"#model-Block\">Block</a>"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "date_less",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "date_greater",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "with_transactions",
									"value": "0",
									"description": "Return data with events of the\r\n<a href=\"#model-TransactionResult\">Transactions</a>"
								},
								{
									"key": "with_events",
									"value": "0",
									"description": "Return event data of <a href=\"#model-EventsResult\">events</a>, needs\r\nwith_transactions to be set"
								},
								{
									"key": "with_event_data",
									"value": "0",
									"description": "Return event data with more details, needs with_event_data to be set"
								},
								{
									"key": "with_nft",
									"value": "0",
									"description": "Return data with <a href=\"#model-NftMetadata\">nft metadata</a>"
								},
								{
									"key": "with_fiat",
									"value": "0",
									"description": "Return with <a href=\"#model-FiatPrice\">fiat_prices</a> (only\r\n<a href=\"#model-MarketEvent\">market_event</a>)"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-BlockResult\">BlockResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/blocks?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&height=&chain=main&date_less=&date_greater=&with_transactions=0&with_events=0&with_event_data=0&with_nft=0&with_fiat=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"blocks"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_transactions",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -37769003,\n  \"blocks\": [\n    {\n      \"height\": \"Ut\",\n      \"hash\": \"cupidatat tempor cillum officia\",\n      \"previous_hash\": \"occaecat tempor\",\n      \"protocol\": -13804768,\n      \"chain_address\": \"eiusmod nisi sint\",\n      \"validator_address\": \"reprehenderit in\",\n      \"date\": \"id sed\",\n      \"reward\": \"Excepteur nulla culpa in\",\n      \"transactions\": [\n        {\n          \"hash\": \"adipisicing incididunt\",\n          \"block_hash\": \"quis a\",\n          \"block_height\": \"veniam nostrud nisi Excep\",\n          \"index\": -50611155,\n          \"date\": \"Ut magna dolore \",\n          \"fee\": \"occaecat Excepteur sit\",\n          \"script_raw\": \"enim\",\n          \"result\": \"laborum nulla \",\n          \"payload\": \"ea Excepteur dolor au\",\n          \"expiration\": \"irure id\",\n          \"events\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"hash\": \"Lorem Excepteur\",\n          \"block_hash\": \"ullamco occaecat in\",\n          \"block_height\": \"non\",\n          \"index\": -49283185,\n          \"date\": \"amet Excepteur eu\",\n          \"fee\": \"ut dolore\",\n          \"script_raw\": \"culpa esse nisi sint nulla\",\n          \"result\": \"commodo ut\",\n          \"payload\": \"occaecat officia laboris\",\n          \"expiration\": \"officia proident \",\n          \"events\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"height\": \"exercitation eiusmod tempor\",\n      \"hash\": \"non velit\",\n      \"previous_hash\": \"ut tempor\",\n      \"protocol\": -27653281,\n      \"chain_address\": \"aute consequat non culpa\",\n      \"validator_address\": \"tempor commodo Ut nisi\",\n      \"date\": \"eiusmod nisi enim Duis\",\n      \"reward\": \"nisi\",\n      \"transactions\": [\n        {\n          \"hash\": \"laboris et ci\",\n          \"block_hash\": \"consectetur voluptate reprehen\",\n          \"block_height\": \"aute id dolore\",\n          \"index\": 60233050,\n          \"date\": \"elit reprehenderit \",\n          \"fee\": \"veniam minim ex\",\n          \"script_raw\": \"nostrud ut\",\n          \"result\": \"officia\",\n          \"payload\": \"cupidatat qui\",\n          \"expiration\": \"enim reprehenderit exercitation amet irure\",\n          \"events\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        {\n          \"hash\": \"non voluptate\",\n          \"block_hash\": \"aliquip\",\n          \"block_height\": \"Ut culpa\",\n          \"index\": 11517340,\n          \"date\": \"in eu in Lorem\",\n          \"fee\": \"non\",\n          \"script_raw\": \"sed irure dolore esse\",\n          \"result\": \"mollit sed non laboris ir\",\n          \"payload\": \"id in dolor labori\",\n          \"expiration\": \"in velit deserunt incididunt dolor\",\n          \"events\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/blocks?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&height=&chain=main&date_less=&date_greater=&with_transactions=0&with_events=0&with_event_data=0&with_nft=0&with_fiat=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"blocks"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_transactions",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/blocks?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&height=&chain=main&date_less=&date_greater=&with_transactions=0&with_events=0&with_event_data=0&with_nft=0&with_fiat=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"blocks"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_transactions",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Chains on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has chain values', function(){",
									"  pm.expect(jsonData).to.have.property(\"chains\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/chains?offset=0&limit=50&chain=main&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"chains"
							],
							"query": [
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-ChainResult\">ChainResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chains?offset=0&limit=50&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -40348502,\n  \"chains\": [\n    {\n      \"chain_name\": \"mollit\",\n      \"chain_height\": \"Ut ea fugi\"\n    },\n    {\n      \"chain_name\": \"dolore commodo\",\n      \"chain_height\": \"laboris elit\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chains?offset=0&limit=50&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/chains?offset=0&limit=50&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"chains"
									],
									"query": [
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Contracts on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has contract values', function(){",
									"  pm.expect(jsonData).to.have.property(\"contracts\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contracts?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&with_methods=0&with_script=0&with_token=0&with_creation_event=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contracts"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, name or symbol"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "symbol",
									"value": "SOUL"
								},
								{
									"key": "hash",
									"value": "SOUL"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_methods",
									"value": "0",
									"description": "Return Data with methods"
								},
								{
									"key": "with_script",
									"value": "0",
									"description": "Return Data with raw script, use instructions to disassemble"
								},
								{
									"key": "with_token",
									"value": "0",
									"description": "Return Data with <a href=\"#model-Token\">Token</a>"
								},
								{
									"key": "with_creation_event",
									"value": "0",
									"description": "Return data with <a href=\"#model-Event\">Event</a> of the creation"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-ContractResult\">ContractResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contracts?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&with_methods=0&with_script=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contracts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_methods",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 54339812,\n  \"contracts\": [\n    {\n      \"name\": \"SOUL\",\n      \"hash\": \"SOUL\",\n      \"symbol\": \"SOUL\",\n      \"address\": {\n        \"address\": \"deserunt do\",\n        \"address_name\": \"deserunt officia\",\n        \"validator_kind\": \"minim sit est ut laboris\",\n        \"stake\": \"proident veniam qui aliqua\",\n        \"unclaimed\": \"incididunt ut mollit\",\n        \"relay\": \"enim\",\n        \"storage\": {\n          \"available\": -52424842,\n          \"used\": -14398675,\n          \"avatar\": \"dolore fugiat in cupidatat consectetur\"\n        },\n        \"stakes\": {\n          \"amount\": \"esse\",\n          \"time\": -84059549,\n          \"unclaimed\": \"officia ut sunt eiusmod\"\n        },\n        \"balances\": [\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"script_raw\": \"enim adipisicing eu\",\n      \"token\": {\n        \"symbol\": \"SOUL\",\n        \"fungible\": true,\n        \"transferable\": false,\n        \"finite\": false,\n        \"divisible\": false,\n        \"fuel\": true,\n        \"stakable\": false,\n        \"fiat\": true,\n        \"swappable\": false,\n        \"burnable\": false,\n        \"decimals\": 8,\n        \"current_supply\": \"Ut elit amet culpa consectetur\",\n        \"max_supply\": \"fugiat velit nostrud in\",\n        \"burned_supply\": \"sed proident\",\n        \"script_raw\": \"qui cupidatat labore velit irure\",\n        \"price\": {\n          \"usd\": -45252672.61114894,\n          \"eur\": 59915337.31260556,\n          \"gbp\": -80051602.22042939,\n          \"jpy\": 98744435.50215232,\n          \"cad\": -36106382.574884236,\n          \"aud\": 18130257.2321762,\n          \"cny\": 40024756.38472712,\n          \"rub\": 32411966.42006235\n        },\n        \"create_event\": {\n          \"event_id\": 21050495,\n          \"chain\": \"main\",\n          \"date\": \"est\",\n          \"block_hash\": \"deserunt dolore\",\n          \"transaction_hash\": \"eu Excepteur nulla irure\",\n          \"token_id\": \"reprehenderit non\",\n          \"event_kind\": \"consectetur in\",\n          \"address\": \"esse ipsum\",\n          \"address_name\": \"mollit dolor adipisicing quis\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"token_logos\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"methods\": {},\n      \"create_event\": {\n        \"event_id\": -638253,\n        \"chain\": \"main\",\n        \"date\": \"Duis velit ut consequat incididunt\",\n        \"block_hash\": \"cupidatat\",\n        \"transaction_hash\": \"eiusmod ad\",\n        \"token_id\": \"ullamco ut ea\",\n        \"event_kind\": \"mollit et elit\",\n        \"address\": \"consectetur in Ut mollit\",\n        \"address_name\": \"aute nostrud\",\n        \"contract\": {\n          \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n        },\n        \"nft_metadata\": {\n          \"description\": \"officia est\",\n          \"name\": \"reprehenderit Excepteur\",\n          \"image\": \"eu labore pariatur enim\",\n          \"video\": \"proident deserunt minim reprehenderit Lorem\",\n          \"info_url\": \"laboris officia in velit est\",\n          \"rom\": \"incididunt deserunt enim ipsum veniam\",\n          \"ram\": \"labore sunt cillum ipsum\",\n          \"mint_date\": \"ut qui minim do\",\n          \"mint_number\": \"id fugiat reprehe\"\n        },\n        \"series\": {\n          \"id\": -10619853,\n          \"series_id\": \"0\",\n          \"creator\": \"dolore\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"dolore exercitation eu con\",\n          \"description\": \"aliquip nisi in magna\",\n          \"image\": \"id magna esse Excepteur\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"cillum Lorem fugiat\",\n          \"value\": \"dolore quis esse\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"aliqu\",\n          \"amount\": \"nostrud et aliquip culpa\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"mollit ut in\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"anim\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"commodo aliqua nulla eu dolore\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"adipisicing exercitation nostrud ut id\",\n          \"market_id\": \"veniam amet\",\n          \"price\": \"dolore sint Lorem\",\n          \"end_price\": \"elit adipisicing minim est\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"consequat amet eu irure\",\n          \"sale_event_kind\": \"reprehenderit Excepteur in\"\n        },\n        \"string_event\": {\n          \"string_value\": \"in voluptate ipsum Duis\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"quis amet dolor proident\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"aute id occaecat ad incididunt\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"SOUL\",\n      \"hash\": \"SOUL\",\n      \"symbol\": \"SOUL\",\n      \"address\": {\n        \"address\": \"minim \",\n        \"address_name\": \"non ex cillum commodo\",\n        \"validator_kind\": \"non consectetur\",\n        \"stake\": \"minim aliqua ut sunt\",\n        \"unclaimed\": \"ex qui\",\n        \"relay\": \"in Excepteur\",\n        \"storage\": {\n          \"available\": -72596456,\n          \"used\": 33502225,\n          \"avatar\": \"irure elit velit officia in\"\n        },\n        \"stakes\": {\n          \"amount\": \"ad ipsum incididunt\",\n          \"time\": 95678974,\n          \"unclaimed\": \"cillum irure sunt\"\n        },\n        \"balances\": [\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"script_raw\": \"dolore laboris aliq\",\n      \"token\": {\n        \"symbol\": \"SOUL\",\n        \"fungible\": false,\n        \"transferable\": false,\n        \"finite\": false,\n        \"divisible\": false,\n        \"fuel\": true,\n        \"stakable\": false,\n        \"fiat\": false,\n        \"swappable\": true,\n        \"burnable\": false,\n        \"decimals\": 8,\n        \"current_supply\": \"adipisicing id deserunt\",\n        \"max_supply\": \"aliquip dolor culpa consectetur\",\n        \"burned_supply\": \"mollit nostrud non\",\n        \"script_raw\": \"in aliquip\",\n        \"price\": {\n          \"usd\": 7639269.543718681,\n          \"eur\": -44077820.0308972,\n          \"gbp\": -79629853.90907478,\n          \"jpy\": -90268389.74375239,\n          \"cad\": -46856200.235701986,\n          \"aud\": -94209299.91291977,\n          \"cny\": -20127007.470858693,\n          \"rub\": -24492929.872021824\n        },\n        \"create_event\": {\n          \"event_id\": -94058102,\n          \"chain\": \"main\",\n          \"date\": \"laboris cillum\",\n          \"block_hash\": \"sed esse\",\n          \"transaction_hash\": \"aliqua in\",\n          \"token_id\": \"esse tempor consequat\",\n          \"event_kind\": \"amet laboris officia\",\n          \"address\": \"adipisicing\",\n          \"address_name\": \"Excepteur cupidatat e\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"token_logos\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"methods\": {},\n      \"create_event\": {\n        \"event_id\": -88236249,\n        \"chain\": \"main\",\n        \"date\": \"Duis ex pariatur\",\n        \"block_hash\": \"fugiat eiu\",\n        \"transaction_hash\": \"id magna ex\",\n        \"token_id\": \"ea \",\n        \"event_kind\": \"nulla dolor\",\n        \"address\": \"ullamco laborum laboris aliqua\",\n        \"address_name\": \"aliquip nulla\",\n        \"contract\": {\n          \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n        },\n        \"nft_metadata\": {\n          \"description\": \"ullamco proident es\",\n          \"name\": \"pariatur labore Lorem\",\n          \"image\": \"ut ad\",\n          \"video\": \"reprehenderit nostrud ipsum tempor\",\n          \"info_url\": \"est\",\n          \"rom\": \"nisi laborum\",\n          \"ram\": \"ex adipisicing sunt repr\",\n          \"mint_date\": \"dolor\",\n          \"mint_number\": \"occaecat ut et aliquip\"\n        },\n        \"series\": {\n          \"id\": 68025835,\n          \"series_id\": \"0\",\n          \"creator\": \"dolore non cupidatat\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"fugiat ut adipisicing anim\",\n          \"description\": \"id ut et\",\n          \"image\": \"anim incididunt quis pariatur\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"ex ea\",\n          \"value\": \"in deserunt quis sit laborum\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"voluptate ut est ex nostrud\",\n          \"amount\": \"anim exercitation incididunt\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"nisi esse occaecat pariatur\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"ut veniam paria\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"id\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"est aute occaecat eu\",\n          \"market_id\": \"ullamco laborum nisi Lorem\",\n          \"price\": \"nostrud\",\n          \"end_price\": \"eu amet\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"dolore cillum ad\",\n          \"sale_event_kind\": \"ad quis magna\"\n        },\n        \"string_event\": {\n          \"string_value\": \"tempor Lorem Duis enim\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"sed Lorem aliquip\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"fugiat minim veniam\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contracts?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&with_methods=0&with_script=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contracts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_methods",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contracts?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&with_methods=0&with_script=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contracts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_methods",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Contract Methods on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has contract method values', function(){",
									"  pm.expect(jsonData).to.have.property(\"contract_method_histories\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/contractmethodhistories?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&date_less=&date_greater=&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"contractmethodhistories"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, name or symbol"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "symbol",
									"value": "SOUL"
								},
								{
									"key": "hash",
									"value": "SOUL"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "date_less",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "date_greater",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-ContractMethodHistoryResult\">ContractMethodHistoryResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contractmethodhistories?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&date_less=&date_greater=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contractmethodhistories"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -67453616,\n  \"contract_method_histories\": [\n    {\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"commodo et Lorem\",\n          \"address_name\": \"occaecat aliqua\",\n          \"validator_kind\": \"Ut\",\n          \"stake\": \"commodo qui aliqua Duis Excepteur\",\n          \"unclaimed\": \"proident sit\",\n          \"relay\": \"adipisicing laborum dolor\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"pariatur consectetur ut ea\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": true,\n          \"finite\": true,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": true,\n          \"swappable\": true,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"tempor esse\",\n          \"max_supply\": \"in magna cupidatat\",\n          \"burned_supply\": \"aute ex amet proident\",\n          \"script_raw\": \"Excepteur\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"event_id\": 66289330,\n          \"chain\": \"main\",\n          \"date\": \"esse aute eiusmod mollit\",\n          \"block_hash\": \"in reprehenderit ut\",\n          \"transaction_hash\": \"eu\",\n          \"token_id\": \"exercitation laboris\",\n          \"event_kind\": \"non ea eu\",\n          \"address\": \"pariatur ipsum Duis\",\n          \"address_name\": \"do\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"date\": \"fugiat consequat\"\n    },\n    {\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"in non\",\n          \"address_name\": \"irure\",\n          \"validator_kind\": \"laborum nostrud\",\n          \"stake\": \"occaecat\",\n          \"unclaimed\": \"eu\",\n          \"relay\": \"velit ad et irure\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"nisi et commodo minim\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": true,\n          \"finite\": false,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": true,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"ipsum labore pariatur in dolore\",\n          \"max_supply\": \"amet dolore\",\n          \"burned_supply\": \"dolore nostrud ipsum officia\",\n          \"script_raw\": \"ea dolore adipisicing\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"event_id\": -81402457,\n          \"chain\": \"main\",\n          \"date\": \"cillum nisi ad exercitation ex\",\n          \"block_hash\": \"in veniam occaecat nisi sint\",\n          \"transaction_hash\": \"elit\",\n          \"token_id\": \"eu\",\n          \"event_kind\": \"irure nostrud\",\n          \"address\": \"cupidatat ea ipsum\",\n          \"address_name\": \"pariat\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"date\": \"reprehenderit non\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contractmethodhistories?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&date_less=&date_greater=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contractmethodhistories"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/contractmethodhistories?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&hash=SOUL&chain=main&date_less=&date_greater=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"contractmethodhistories"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "hash",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the disassembled version of the Script.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has instrution values', function(){",
									"  pm.expect(jsonData).to.have.property(\"instructions\");",
									"  pm.expect(jsonData).to.have.property(\"total_results\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"script_raw\": \"0B\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/instructions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"instructions"
							]
						},
						"description": "<a href=\"#model-DisassemblerResult\">DisassemblerResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"script_raw\": \"Lorem reprehenderit ut incididunt\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/instructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"instructions"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -6806995,\n  \"instructions\": [\n    {\n      \"instruction\": \"culpa anim eiusmod ipsum\"\n    },\n    {\n      \"instruction\": \"est in elit Lorem\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"script_raw\": \"Lorem reprehenderit ut incididunt\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/instructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"instructions"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"script_raw\": \"Lorem reprehenderit ut incididunt\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/instructions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"instructions"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Event Kinds on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has event kind values', function(){",
									"  pm.expect(jsonData).to.have.property(\"event_kinds\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/eventkinds?order_by=id&order_direction=asc&offset=0&limit=50&event_kind=TokenMint&chain=main&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"eventkinds"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "event_kind",
									"value": "TokenMint",
									"description": "eventKind name"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-EventKindResult\">EventKindResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/eventkinds?order_by=id&order_direction=asc&offset=0&limit=50&event_kind=TokenMint&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"eventkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -64855385,\n  \"event_kinds\": [\n    {\n      \"name\": \"Excepteur proident laboris in\"\n    },\n    {\n      \"name\": \"nulla fugiat eiusmod\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/eventkinds?order_by=id&order_direction=asc&offset=0&limit=50&event_kind=TokenMint&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"eventkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/eventkinds?order_by=id&order_direction=asc&offset=0&limit=50&event_kind=TokenMint&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"eventkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns events available on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has event values', function(){",
									"  pm.expect(jsonData).to.have.property(\"events\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/events?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&contract=SOUL&token_id=&date_day=&date_less=&date_greater=&event_kind=TokenMint&event_kind_partial=Token&nft_name_partial=&nft_description_partial=&address=&address_partial=&block_hash=&block_height=&transaction_hash=&event_id=&with_event_data=0&with_metadata=0&with_series=0&with_fiat=0&with_nsfw=0&with_blacklisted=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"events"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are date, token_id or id"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "contract",
									"value": "SOUL",
									"description": "Token contract hash"
								},
								{
									"key": "token_id",
									"value": "",
									"description": "Token ID"
								},
								{
									"key": "date_day",
									"value": "",
									"description": "Date day match (matches whole given day)"
								},
								{
									"key": "date_less",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "date_greater",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "event_kind",
									"value": "TokenMint",
									"description": "Event kind name"
								},
								{
									"key": "event_kind_partial",
									"value": "Token",
									"description": "Event kind (partial match)"
								},
								{
									"key": "nft_name_partial",
									"value": "",
									"description": "Nft name (partial match)"
								},
								{
									"key": "nft_description_partial",
									"value": "",
									"description": "Nft description (partial match))"
								},
								{
									"key": "address",
									"value": "",
									"description": "Address (Hash)"
								},
								{
									"key": "address_partial",
									"value": "",
									"description": "Address (partial match) (Hash)"
								},
								{
									"key": "block_hash",
									"value": "",
									"description": "<a href=\"#model-Block\">Block</a> hash"
								},
								{
									"key": "block_height",
									"value": "",
									"description": "height of the <a href=\"#model-Block\">Block</a>"
								},
								{
									"key": "transaction_hash",
									"value": "",
									"description": "<a href=\"#model-Transaction\">Transaction</a> hash"
								},
								{
									"key": "event_id",
									"value": "",
									"description": "Internal ID"
								},
								{
									"key": "with_event_data",
									"value": "0",
									"description": "Return event data with more details, needs with_events to be set"
								},
								{
									"key": "with_metadata",
									"value": "0",
									"description": "Return data with <a href=\"#model-NftMetadata\">nft metadata</a>"
								},
								{
									"key": "with_series",
									"value": "0",
									"description": "Return NFT <a href=\"#model-Series\">Series</a>"
								},
								{
									"key": "with_fiat",
									"value": "0",
									"description": "Return with <a href=\"#model-FiatPrice\">fiat_prices</a> (only\r\n<a href=\"#model-MarketEvent\">market_event</a>)"
								},
								{
									"key": "with_nsfw",
									"value": "0",
									"description": "Include Data that has been marked NSFW"
								},
								{
									"key": "with_blacklisted",
									"value": "0",
									"description": "Include Data that has been marked Blacklisted"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-EventsResult\">EventsResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&contract=SOUL&token_id=&date_day=&date_less=&date_greater=&event_kind=TokenMint&event_kind_partial=Token&nft_name_partial=&nft_description_partial=&address=&address_partial=&block_hash=&block_height=&transaction_hash=&event_id=&with_event_data=0&with_metadata=0&with_series=0&with_fiat=0&with_nsfw=0&with_blacklisted=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "date_day",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "event_kind_partial",
											"value": "Token"
										},
										{
											"key": "nft_name_partial",
											"value": ""
										},
										{
											"key": "nft_description_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "transaction_hash",
											"value": ""
										},
										{
											"key": "event_id",
											"value": ""
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_metadata",
											"value": "0"
										},
										{
											"key": "with_series",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_nsfw",
											"value": "0"
										},
										{
											"key": "with_blacklisted",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -30598004,\n  \"events\": [\n    {\n      \"event_id\": -68766420,\n      \"chain\": \"main\",\n      \"date\": \"voluptate et\",\n      \"block_hash\": \"nostrud veniam ex\",\n      \"transaction_hash\": \"laborum\",\n      \"token_id\": \"sed sit Duis ipsum minim\",\n      \"event_kind\": \"ci\",\n      \"address\": \"sit reprehenderit\",\n      \"address_name\": \"Lorem culpa labore est\",\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"aute qui \",\n          \"address_name\": \"minim elit voluptate\",\n          \"validator_kind\": \"dolore aliqua ipsum nulla\",\n          \"stake\": \"dolor do ipsum\",\n          \"unclaimed\": \"u\",\n          \"relay\": \"Lorem Duis esse tempor nulla\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"nisi amet\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": true,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"consectetur sunt\",\n          \"max_supply\": \"tempor ut in labore aute\",\n          \"burned_supply\": \"reprehenderit elit\",\n          \"script_raw\": \"ut exercitation Ut Excepteur qui\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n        }\n      },\n      \"nft_metadata\": {\n        \"description\": \"consequat laboris ex\",\n        \"name\": \"laboris\",\n        \"image\": \"deserunt ut cillum ipsum\",\n        \"video\": \"sit adi\",\n        \"info_url\": \"enim Lorem\",\n        \"rom\": \"minim esse in\",\n        \"ram\": \"nisi ut dol\",\n        \"mint_date\": \"deserunt irure Duis\",\n        \"mint_number\": \"nulla\"\n      },\n      \"series\": {\n        \"id\": -61654421,\n        \"series_id\": \"0\",\n        \"creator\": \"sint\",\n        \"current_supply\": 2,\n        \"max_supply\": 52,\n        \"mode_name\": \"Duplicated\",\n        \"name\": \"do dolore\",\n        \"description\": \"labore quis voluptate ullamco\",\n        \"image\": \"reprehenderit anim\",\n        \"royalties\": \"0\",\n        \"type\": 20,\n        \"attr_type_1\": \"Artist Name\",\n        \"attr_value_1\": \"Peter Painter\",\n        \"attr_type_2\": \"Location\",\n        \"attr_value_2\": \"Greenland\",\n        \"attr_type_3\": \"Size\",\n        \"attr_value_3\": \"1920x1080\"\n      },\n      \"address_event\": {\n        \"address\": {\n          \"address\": \"consequat voluptate adipisicing dol\",\n          \"address_name\": \"ullamco\",\n          \"validator_kind\": \"exercitation cupidatat culpa\",\n          \"stake\": \"enim id irure\",\n          \"unclaimed\": \"sunt esse in pariatur\",\n          \"relay\": \"veniam minim\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"chain_event\": {\n        \"name\": \"occaecat Lorem magna\",\n        \"value\": \"dolore cillum sint\",\n        \"chain\": {\n          \"chain_name\": \"eu ut voluptate mollit\",\n          \"chain_height\": \"laborum veniam inci\"\n        }\n      },\n      \"gas_event\": {\n        \"price\": \"dolor mollit proident sit minim\",\n        \"amount\": \"dolor deserunt\",\n        \"address\": {\n          \"address\": \"irure magna\",\n          \"address_name\": \"tempor sunt non\",\n          \"validator_kind\": \"in laborum ipsum est\",\n          \"stake\": \"Ut Lorem consectetur id ad\",\n          \"unclaimed\": \"Excepteur voluptate velit\",\n          \"relay\": \"nisi magna commodo\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"hash_event\": {\n        \"hash\": \"ipsum laborum\"\n      },\n      \"infusion_event\": {\n        \"token_id\": \"ullamco in Ut aute\",\n        \"base_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": true,\n          \"fuel\": false,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": true,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"consequat eiusmod sunt\",\n          \"max_supply\": \"voluptate irure\",\n          \"burned_supply\": \"magna et occaecat cupidatat\",\n          \"script_raw\": \"deserunt quis ad cupidatat\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"infused_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": true,\n          \"finite\": false,\n          \"divisible\": true,\n          \"fuel\": false,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"in\",\n          \"max_supply\": \"sit enim dolor eu\",\n          \"burned_supply\": \"occaecat\",\n          \"script_raw\": \"eu reprehen\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"infused_value\": \"ad sit laborum aliquip deserunt\"\n      },\n      \"market_event\": {\n        \"base_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": true,\n          \"fuel\": false,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"Duis fugiat nulla\",\n          \"max_supply\": \"in Excepteur\",\n          \"burned_supply\": \"nostrud veniam eu eiusmod\",\n          \"script_raw\": \"voluptate ut ea\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"quote_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": true,\n          \"finite\": false,\n          \"divisible\": true,\n          \"fuel\": true,\n          \"stakable\": true,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"officia sint sed proident elit\",\n          \"max_supply\": \"Ut ullamco magna dolore minim\",\n          \"burned_supply\": \"ad ea\",\n          \"script_raw\": \"qui aliqua velit\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"market_event_kind\": \"pro\",\n        \"market_id\": \"commodo adipisicing ex fugiat ullamco\",\n        \"price\": \"irure ipsum fugiat sed\",\n        \"end_price\": \"laboris labore\",\n        \"fiat_price\": {\n          \"fiat_currency\": \"USD\",\n          \"fiat_price\": \"ex eu\",\n          \"fiat_price_end\": \"nulla\"\n        }\n      },\n      \"organization_event\": {\n        \"organization\": {\n          \"id\": \"dolor\",\n          \"name\": \"proident do Excepteur\",\n          \"size\": -21226130,\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"address\": {\n          \"address\": \"aliqua dolore\",\n          \"address_name\": \"esse veniam pariatur ea\",\n          \"validator_kind\": \"occaecat exercitation elit\",\n          \"stake\": \"fugiat do est ut\",\n          \"unclaimed\": \"in adipisicing proident\",\n          \"relay\": \"anim tempor ut sed\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"sale_event\": {\n        \"hash\": \"exercitation laborum deserunt in\",\n        \"sale_event_kind\": \"sunt quis ad\"\n      },\n      \"string_event\": {\n        \"string_value\": \"eiusmod sed et exercitation\"\n      },\n      \"token_event\": {\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": false,\n          \"fuel\": false,\n          \"stakable\": true,\n          \"fiat\": true,\n          \"swappable\": true,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"proident voluptate\",\n          \"max_supply\": \"nulla pariatur magna est eu\",\n          \"burned_supply\": \"ipsum id\",\n          \"script_raw\": \"ad labore non dolor eiusmod\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"value\": \"ut l\",\n        \"chain_name\": \"main\"\n      },\n      \"transaction_settle_event\": {\n        \"hash\": \"enim laboris proident nostrud\",\n        \"platform\": {\n          \"name\": \"sint id Excepteur ut\",\n          \"chain\": \"officia eiusmod adipi\",\n          \"fuel\": \"in qui\",\n          \"externals\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"platform_interops\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"platform_tokens\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        }\n      }\n    },\n    {\n      \"event_id\": 63878671,\n      \"chain\": \"main\",\n      \"date\": \"consequat laboris velit minim\",\n      \"block_hash\": \"nulla et \",\n      \"transaction_hash\": \"nostrud proident magna\",\n      \"token_id\": \"sit sed quis amet id\",\n      \"event_kind\": \"nulla fugiat ad\",\n      \"address\": \"ex in\",\n      \"address_name\": \"in magna Lorem ut\",\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"nisi velit adipisicing\",\n          \"address_name\": \"irure sed in nulla\",\n          \"validator_kind\": \"enim \",\n          \"stake\": \"cillum in culpa\",\n          \"unclaimed\": \"qui pariatur labore\",\n          \"relay\": \"fugiat anim in laboris\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"eiusmod ut id\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": true,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"qui laboris\",\n          \"max_supply\": \"sit\",\n          \"burned_supply\": \"labore\",\n          \"script_raw\": \"ut\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n        }\n      },\n      \"nft_metadata\": {\n        \"description\": \"Lorem irure ullamco elit id\",\n        \"name\": \"quis tempor\",\n        \"image\": \"deserunt\",\n        \"video\": \"nisi Excepteur ci\",\n        \"info_url\": \"cupidatat sunt aliquip magna\",\n        \"rom\": \"amet nostrud\",\n        \"ram\": \"labore dolore velit mollit\",\n        \"mint_date\": \"non Ut exercita\",\n        \"mint_number\": \"do cillum sed\"\n      },\n      \"series\": {\n        \"id\": -26282101,\n        \"series_id\": \"0\",\n        \"creator\": \"laborum nisi ad culpa Lorem\",\n        \"current_supply\": 2,\n        \"max_supply\": 52,\n        \"mode_name\": \"Duplicated\",\n        \"name\": \"consequat\",\n        \"description\": \"veniam nisi est dolo\",\n        \"image\": \"elit quis\",\n        \"royalties\": \"0\",\n        \"type\": 20,\n        \"attr_type_1\": \"Artist Name\",\n        \"attr_value_1\": \"Peter Painter\",\n        \"attr_type_2\": \"Location\",\n        \"attr_value_2\": \"Greenland\",\n        \"attr_type_3\": \"Size\",\n        \"attr_value_3\": \"1920x1080\"\n      },\n      \"address_event\": {\n        \"address\": {\n          \"address\": \"irure proident ut\",\n          \"address_name\": \"dolore Excepteur Ut dolore\",\n          \"validator_kind\": \"reprehenderit aliqua do laboris\",\n          \"stake\": \"sint amet anim\",\n          \"unclaimed\": \"Ut laborum elit\",\n          \"relay\": \"voluptate deserunt dolor\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"chain_event\": {\n        \"name\": \"officia ex sit sed\",\n        \"value\": \"minim\",\n        \"chain\": {\n          \"chain_name\": \"\",\n          \"chain_height\": \"velit culpa\"\n        }\n      },\n      \"gas_event\": {\n        \"price\": \"nulla\",\n        \"amount\": \"fugiat voluptate occaecat\",\n        \"address\": {\n          \"address\": \"eu quis et reprehenderit\",\n          \"address_name\": \"culpa irure\",\n          \"validator_kind\": \"eu\",\n          \"stake\": \"sunt in\",\n          \"unclaimed\": \"ut culpa aute veniam\",\n          \"relay\": \"consequat Excepteur ullamco id\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"hash_event\": {\n        \"hash\": \"in culpa qui\"\n      },\n      \"infusion_event\": {\n        \"token_id\": \"fugiat officia\",\n        \"base_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": true,\n          \"finite\": true,\n          \"divisible\": true,\n          \"fuel\": false,\n          \"stakable\": true,\n          \"fiat\": true,\n          \"swappable\": true,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"minim magna\",\n          \"max_supply\": \"qui cupidatat Excepteur ea\",\n          \"burned_supply\": \"id\",\n          \"script_raw\": \"est id\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"infused_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": true,\n          \"finite\": true,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": true,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"ullamco Lorem proident aute\",\n          \"max_supply\": \"mollit Excepteur velit\",\n          \"burned_supply\": \"ea voluptate ipsum\",\n          \"script_raw\": \"Duis eu\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"infused_value\": \"eu sint culpa\"\n      },\n      \"market_event\": {\n        \"base_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": false,\n          \"finite\": false,\n          \"divisible\": true,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": true,\n          \"swappable\": true,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"in anim magna eiusmod\",\n          \"max_supply\": \"officia reprehenderit in pariatur\",\n          \"burned_supply\": \"velit in\",\n          \"script_raw\": \"adipisicing ut non ipsum\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"quote_token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": false,\n          \"finite\": false,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": true,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"su\",\n          \"max_supply\": \"in ea Excepteur\",\n          \"burned_supply\": \"sed tempor ut dolor\",\n          \"script_raw\": \"non quis dolor cupidatat aliqu\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"market_event_kind\": \"labore\",\n        \"market_id\": \"Ut consectetur\",\n        \"price\": \"adipisicing irure aliquip\",\n        \"end_price\": \"consectetur\",\n        \"fiat_price\": {\n          \"fiat_currency\": \"USD\",\n          \"fiat_price\": \"aute\",\n          \"fiat_price_end\": \"ullamco ipsum in laborum amet\"\n        }\n      },\n      \"organization_event\": {\n        \"organization\": {\n          \"id\": \"magna amet minim\",\n          \"name\": \"magn\",\n          \"size\": -46835224,\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"address\": {\n          \"address\": \"mollit\",\n          \"address_name\": \"occaecat et\",\n          \"validator_kind\": \"adipisicing nostrud occaecat\",\n          \"stake\": \"qui irure\",\n          \"unclaimed\": \"fugiat cillum es\",\n          \"relay\": \"culpa reprehenderit\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        }\n      },\n      \"sale_event\": {\n        \"hash\": \"consequat aliquip Duis\",\n        \"sale_event_kind\": \"irure sed dolore\"\n      },\n      \"string_event\": {\n        \"string_value\": \"irure Duis\"\n      },\n      \"token_event\": {\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": true,\n          \"transferable\": false,\n          \"finite\": false,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": false,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"nulla\",\n          \"max_supply\": \"nisi Lorem\",\n          \"burned_supply\": \"proident laboris occaecat in\",\n          \"script_raw\": \"nul\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"value\": \"aute mollit do elit\",\n        \"chain_name\": \"main\"\n      },\n      \"transaction_settle_event\": {\n        \"hash\": \"exercitation adipisicing\",\n        \"platform\": {\n          \"name\": \"ad incididunt esse\",\n          \"chain\": \"culpa ullam\",\n          \"fuel\": \"mini\",\n          \"externals\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"platform_interops\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"platform_tokens\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&contract=SOUL&token_id=&date_day=&date_less=&date_greater=&event_kind=TokenMint&event_kind_partial=Token&nft_name_partial=&nft_description_partial=&address=&address_partial=&block_hash=&block_height=&transaction_hash=&event_id=&with_event_data=0&with_metadata=0&with_series=0&with_fiat=0&with_nsfw=0&with_blacklisted=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "date_day",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "event_kind_partial",
											"value": "Token"
										},
										{
											"key": "nft_name_partial",
											"value": ""
										},
										{
											"key": "nft_description_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "transaction_hash",
											"value": ""
										},
										{
											"key": "event_id",
											"value": ""
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_metadata",
											"value": "0"
										},
										{
											"key": "with_series",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_nsfw",
											"value": "0"
										},
										{
											"key": "with_blacklisted",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/events?order_by=id&order_direction=asc&offset=0&limit=50&chain=main&contract=SOUL&token_id=&date_day=&date_less=&date_greater=&event_kind=TokenMint&event_kind_partial=Token&nft_name_partial=&nft_description_partial=&address=&address_partial=&block_hash=&block_height=&transaction_hash=&event_id=&with_event_data=0&with_metadata=0&with_series=0&with_fiat=0&with_nsfw=0&with_blacklisted=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"events"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "date_day",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "event_kind",
											"value": "TokenMint"
										},
										{
											"key": "event_kind_partial",
											"value": "Token"
										},
										{
											"key": "nft_name_partial",
											"value": ""
										},
										{
											"key": "nft_description_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "address_partial",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "transaction_hash",
											"value": ""
										},
										{
											"key": "event_id",
											"value": ""
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_metadata",
											"value": "0"
										},
										{
											"key": "with_series",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_nsfw",
											"value": "0"
										},
										{
											"key": "with_blacklisted",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns NFTs available on Phantasma blockchain.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has ntf values', function(){",
									"  pm.expect(jsonData).to.have.property(\"nfts\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/nfts?order_by=id&order_direction=asc&offset=0&limit=50&creator=&owner=&contract_hash=SOUL&name=&chain=main&symbol=TTRS&token_id=&series_id=&status=all&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"nfts"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or mint_date"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "creator",
									"value": "",
									"description": "Address of asset creator"
								},
								{
									"key": "owner",
									"value": "",
									"description": "Address of asset owner"
								},
								{
									"key": "contract_hash",
									"value": "SOUL",
									"description": "Token contract hash"
								},
								{
									"key": "name",
									"value": "",
									"description": "Asset name/description filter (partial match)"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "symbol",
									"value": "TTRS"
								},
								{
									"key": "token_id",
									"value": "",
									"description": "Token ID"
								},
								{
									"key": "series_id",
									"value": "",
									"description": "Series ID"
								},
								{
									"key": "status",
									"value": "all",
									"description": "Infusion status (all/active/infused)"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-NftsResult\">SeriesResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/nfts?order_by=id&order_direction=asc&offset=0&limit=50&creator=&owner=&contract_hash=SOUL&name=&chain=main&symbol=TTRS&token_id=&series_id=&status=all&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"nfts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "owner",
											"value": ""
										},
										{
											"key": "contract_hash",
											"value": "SOUL"
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "symbol",
											"value": "TTRS"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "status",
											"value": "all"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 22731223,\n  \"nfts\": [\n    {\n      \"token_id\": \"occaecat magna\",\n      \"chain\": \"main\",\n      \"symbol\": \"KCAL\",\n      \"creator_address\": \"ipsum est\",\n      \"creator_onchain_name\": \"nisi dolor mollit\",\n      \"owners\": [\n        {\n          \"address\": \"nostrud laboris\",\n          \"onchain_name\": \"Excepteur sunt id in exercitation\",\n          \"offchain_name\": \"labore sunt ullamco sint\",\n          \"amount\": 1\n        },\n        {\n          \"address\": \"sunt\",\n          \"onchain_name\": \"ipsum laboris est\",\n          \"offchain_name\": \"eiusmod proident anim dolor\",\n          \"amount\": 1\n        }\n      ],\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"in ex\",\n          \"address_name\": \"culpa\",\n          \"validator_kind\": \"sit reprehenderit exercitation ea\",\n          \"stake\": \"tempor Duis qui proident\",\n          \"unclaimed\": \"Lorem ex ullamco tempor\",\n          \"relay\": \"et ea\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"non aute labore consequat\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": false,\n          \"finite\": true,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": true,\n          \"swappable\": true,\n          \"burnable\": false,\n          \"decimals\": 8,\n          \"current_supply\": \"minim\",\n          \"max_supply\": \"id dolore Lorem do\",\n          \"burned_supply\": \"laboris officia aliqua\",\n          \"script_raw\": \"enim ut aliquip\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"event_id\": -34825728,\n          \"chain\": \"main\",\n          \"date\": \"tempor irure incididunt\",\n          \"block_hash\": \"velit anim consectetur laborum enim\",\n          \"transaction_hash\": \"dolore\",\n          \"token_id\": \"aliquip laborum Excepteur eu ullamco\",\n          \"event_kind\": \"est in Excepteur minim\",\n          \"address\": \"dolor\",\n          \"address_name\": \"eiusmod aliqua irure nisi\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"nft_metadata\": {\n        \"description\": \"esse ipsum proident id ea\",\n        \"name\": \"deserunt dolor\",\n        \"image\": \"amet aute dolore sunt\",\n        \"video\": \"in id dolore eiusmod\",\n        \"info_url\": \"dolor\",\n        \"rom\": \"ut quis\",\n        \"ram\": \"in\",\n        \"mint_date\": \"culpa do\",\n        \"mint_number\": \"tempor aliquip commodo\"\n      },\n      \"series\": {\n        \"id\": 79975863,\n        \"series_id\": \"0\",\n        \"creator\": \"tempor dolor\",\n        \"current_supply\": 2,\n        \"max_supply\": 52,\n        \"mode_name\": \"Duplicated\",\n        \"name\": \"adipisicing\",\n        \"description\": \"consectetur id anim\",\n        \"image\": \"cupidatat ut consectetur sit\",\n        \"royalties\": \"0\",\n        \"type\": 20,\n        \"attr_type_1\": \"Artist Name\",\n        \"attr_value_1\": \"Peter Painter\",\n        \"attr_type_2\": \"Location\",\n        \"attr_value_2\": \"Greenland\",\n        \"attr_type_3\": \"Size\",\n        \"attr_value_3\": \"1920x1080\"\n      },\n      \"infusion\": [\n        {\n          \"key\": \"KCAL\",\n          \"value\": \"100\"\n        },\n        {\n          \"key\": \"KCAL\",\n          \"value\": \"100\"\n        }\n      ],\n      \"infused_into\": {\n        \"token_id\": \"exercitation in amet\",\n        \"chain\": \"main\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"sit ullamco sunt Ut\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      }\n    },\n    {\n      \"token_id\": \"occaecat dolor qui\",\n      \"chain\": \"main\",\n      \"symbol\": \"KCAL\",\n      \"creator_address\": \"nisi dolore ut\",\n      \"creator_onchain_name\": \"ut Exc\",\n      \"owners\": [\n        {\n          \"address\": \"irure eu sint exercitation\",\n          \"onchain_name\": \"deserunt aliquip\",\n          \"offchain_name\": \"incididunt nisi in exercitation amet\",\n          \"amount\": 1\n        },\n        {\n          \"address\": \"incididunt occaecat sunt\",\n          \"onchain_name\": \"ut laboris sint aliqua\",\n          \"offchain_name\": \"qui nulla ut\",\n          \"amount\": 1\n        }\n      ],\n      \"contract\": {\n        \"name\": \"SOUL\",\n        \"hash\": \"SOUL\",\n        \"symbol\": \"SOUL\",\n        \"address\": {\n          \"address\": \"est esse incididunt in\",\n          \"address_name\": \"nulla ut elit mollit magna\",\n          \"validator_kind\": \"irure labore\",\n          \"stake\": \"voluptate culpa mollit sed\",\n          \"unclaimed\": \"aliquip tempor\",\n          \"relay\": \"commodo qui Duis esse\",\n          \"storage\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"stakes\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"balances\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"script_raw\": \"velit magna nulla\",\n        \"token\": {\n          \"symbol\": \"SOUL\",\n          \"fungible\": false,\n          \"transferable\": false,\n          \"finite\": false,\n          \"divisible\": false,\n          \"fuel\": true,\n          \"stakable\": false,\n          \"fiat\": false,\n          \"swappable\": true,\n          \"burnable\": true,\n          \"decimals\": 8,\n          \"current_supply\": \"in reprehenderit\",\n          \"max_supply\": \"labore ut eu\",\n          \"burned_supply\": \"magna cupidatat incididunt\",\n          \"script_raw\": \"labore deserunt nostrud dolore\",\n          \"price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_logos\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ]\n        },\n        \"methods\": {},\n        \"create_event\": {\n          \"event_id\": -69808661,\n          \"chain\": \"main\",\n          \"date\": \"dolor\",\n          \"block_hash\": \"consectetur\",\n          \"transaction_hash\": \"occaecat incididunt tempor anim in\",\n          \"token_id\": \"Lorem enim\",\n          \"event_kind\": \"eu nulla voluptate dolor\",\n          \"address\": \"ex aute dolor\",\n          \"address_name\": \"officia id qui et\",\n          \"contract\": {\n            \"value\": \"<Circular reference to #/components/schemas/Contract detected>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"nft_metadata\": {\n        \"description\": \"consequat minim\",\n        \"name\": \"elit\",\n        \"image\": \"do in ullamco i\",\n        \"video\": \"Duis aliquip adipisicing pariatur\",\n        \"info_url\": \"ut mollit\",\n        \"rom\": \"et eu\",\n        \"ram\": \"ex elit id ut\",\n        \"mint_date\": \"in\",\n        \"mint_number\": \"eu\"\n      },\n      \"series\": {\n        \"id\": 40335993,\n        \"series_id\": \"0\",\n        \"creator\": \"nostrud\",\n        \"current_supply\": 2,\n        \"max_supply\": 52,\n        \"mode_name\": \"Duplicated\",\n        \"name\": \"adipi\",\n        \"description\": \"sit cupidatat fugiat non\",\n        \"image\": \"deserunt consectetur\",\n        \"royalties\": \"0\",\n        \"type\": 20,\n        \"attr_type_1\": \"Artist Name\",\n        \"attr_value_1\": \"Peter Painter\",\n        \"attr_type_2\": \"Location\",\n        \"attr_value_2\": \"Greenland\",\n        \"attr_type_3\": \"Size\",\n        \"attr_value_3\": \"1920x1080\"\n      },\n      \"infusion\": [\n        {\n          \"key\": \"KCAL\",\n          \"value\": \"100\"\n        },\n        {\n          \"key\": \"KCAL\",\n          \"value\": \"100\"\n        }\n      ],\n      \"infused_into\": {\n        \"token_id\": \"anim \",\n        \"chain\": \"main\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"aute quis\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/nfts?order_by=id&order_direction=asc&offset=0&limit=50&creator=&owner=&contract_hash=SOUL&name=&chain=main&symbol=TTRS&token_id=&series_id=&status=all&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"nfts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "owner",
											"value": ""
										},
										{
											"key": "contract_hash",
											"value": "SOUL"
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "symbol",
											"value": "TTRS"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "status",
											"value": "all"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/nfts?order_by=id&order_direction=asc&offset=0&limit=50&creator=&owner=&contract_hash=SOUL&name=&chain=main&symbol=TTRS&token_id=&series_id=&status=all&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"nfts"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "owner",
											"value": ""
										},
										{
											"key": "contract_hash",
											"value": "SOUL"
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "symbol",
											"value": "TTRS"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "status",
											"value": "all"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Oracles on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has oracle values', function(){",
									"  pm.expect(jsonData).to.have.property(\"oracles\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/oracles?order_by=id&order_direction=asc&offset=0&limit=50&block_hash=&block_height=300000&chain=main&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"oracles"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, url or content]"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "block_hash",
									"value": "",
									"description": "<a href=\"#model-Block\">Block</a> hash"
								},
								{
									"key": "block_height",
									"value": "300000",
									"description": "height of the <a href=\"#model-Block\">Block</a>"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-OracleResult\">OracleResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/oracles?order_by=id&order_direction=asc&offset=0&limit=50&block_hash=&block_height=&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"oracles"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 23832174,\n  \"oracles\": [\n    {\n      \"url\": \"tempor laboris enim ad\",\n      \"content\": \"eu enim anim\"\n    },\n    {\n      \"url\": \"minim tempor dolor consectetur Duis\",\n      \"content\": \"ut mollit commodo\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/oracles?order_by=id&order_direction=asc&offset=0&limit=50&block_hash=&block_height=&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"oracles"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/oracles?order_by=id&order_direction=asc&offset=0&limit=50&block_hash=&block_height=&chain=main&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"oracles"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Organizations on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has organization values', function(){",
									"  pm.expect(jsonData).to.have.property(\"organizations\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/organizations?order_by=id&order_direction=asc&offset=0&limit=50&organization_id=validators&organization_id_partial=valid&organization_name=Block Producers&organization_name_partial=Block Pro&with_creation_event=0&with_address=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"organizations"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, name or organization_id"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "organization_id",
									"value": "validators",
									"description": "Organization id"
								},
								{
									"key": "organization_id_partial",
									"value": "valid",
									"description": "Organization id (partial)"
								},
								{
									"key": "organization_name",
									"value": "Block Producers",
									"description": "Organization Name"
								},
								{
									"key": "organization_name_partial",
									"value": "Block Pro",
									"description": "Organization Name (partial)"
								},
								{
									"key": "with_creation_event",
									"value": "0",
									"description": "Return data with <a href=\"#model-Event\">Event</a> of the creation"
								},
								{
									"key": "with_address",
									"value": "0",
									"description": "Return data with <a href=\"#model-Address\">Event</a> of the creation"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-OrganizationResult\">OrganizationResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/organizations?order_by=id&order_direction=asc&offset=0&limit=50&organization_id=validators&organization_id_partial=valid&organization_name=Block Producers&organization_name_partial=Block Pro&with_creation_event=0&with_address=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"organizations"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "organization_id",
											"value": "validators"
										},
										{
											"key": "organization_id_partial",
											"value": "valid"
										},
										{
											"key": "organization_name",
											"value": "Block Producers"
										},
										{
											"key": "organization_name_partial",
											"value": "Block Pro"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_address",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -4460610,\n  \"organizations\": [\n    {\n      \"id\": \"sed culpa\",\n      \"name\": \"minim in\",\n      \"size\": -20126624,\n      \"create_event\": {\n        \"event_id\": 67898522,\n        \"chain\": \"main\",\n        \"date\": \"Lorem\",\n        \"block_hash\": \"qui ea\",\n        \"transaction_hash\": \"dolor nostrud exercitation\",\n        \"token_id\": \"minim ullamco adipisicing id veniam\",\n        \"event_kind\": \"Duis aute \",\n        \"address\": \"ex dolor adipisicing\",\n        \"address_name\": \"anim ut\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"ad Duis\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"occaecat\",\n          \"name\": \"cupidatat eu fugiat\",\n          \"image\": \"consectetur est\",\n          \"video\": \"sed est\",\n          \"info_url\": \"minim sunt eu velit\",\n          \"rom\": \"enim velit\",\n          \"ram\": \"Except\",\n          \"mint_date\": \"cupidatat do magna \",\n          \"mint_number\": \"labore sunt\"\n        },\n        \"series\": {\n          \"id\": 89084629,\n          \"series_id\": \"0\",\n          \"creator\": \"nisi anim consequat eiusmod dolore\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"eiusmod nisi eu officia incididunt\",\n          \"description\": \"est\",\n          \"image\": \"cupidatat sint\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"nulla mollit Lorem\",\n          \"value\": \"velit sin\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"proident sed dolor\",\n          \"amount\": \"Lorem\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"adipisicing Duis\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"dolore cillum nostrud\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"reprehenderit enim do\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"incididunt deserunt dolore volupt\",\n          \"market_id\": \"in Lorem pariatur ad\",\n          \"price\": \"dolore nisi fugiat aliqua\",\n          \"end_price\": \"dolore qui\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Circular reference to #/components/schemas/Organization detected>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"cupidatat enim\",\n          \"sale_event_kind\": \"magna deserunt ipsum nostrud in\"\n        },\n        \"string_event\": {\n          \"string_value\": \"eiusmod dolore voluptate\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"in\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"E\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"address\": {\n        \"address\": \"Duis sunt esse\",\n        \"address_name\": \"dolor Excepteur tempor dolor\",\n        \"validator_kind\": \"Excepteur in quis adipisicing\",\n        \"stake\": \"Excepteur quis\",\n        \"unclaimed\": \"ut\",\n        \"relay\": \"officia\",\n        \"storage\": {\n          \"available\": 5732730,\n          \"used\": -25530676,\n          \"avatar\": \"do deserunt\"\n        },\n        \"stakes\": {\n          \"amount\": \"proident eiusmod enim officia fugiat\",\n          \"time\": -53396907,\n          \"unclaimed\": \"ullamco\"\n        },\n        \"balances\": [\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"id\": \"quis eiusmod minim labore\",\n      \"name\": \"anim fugiat ullamco\",\n      \"size\": 2571494,\n      \"create_event\": {\n        \"event_id\": 9781225,\n        \"chain\": \"main\",\n        \"date\": \"ullamco sed in\",\n        \"block_hash\": \"aliqua enim veniam\",\n        \"transaction_hash\": \"magna dolore reprehenderit\",\n        \"token_id\": \"Ut magna irure laborum dolore\",\n        \"event_kind\": \"dolore proident ut incididunt\",\n        \"address\": \"in qui proident id\",\n        \"address_name\": \"sint ut minim\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"dolor\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"cupidatat minim proident\",\n          \"name\": \"Excepteur mollit Ut\",\n          \"image\": \"irure veniam\",\n          \"video\": \"i\",\n          \"info_url\": \"do sunt\",\n          \"rom\": \"Duis\",\n          \"ram\": \"Duis nulla ad ipsum\",\n          \"mint_date\": \"proident fugiat ut dolor\",\n          \"mint_number\": \"magna pariatur\"\n        },\n        \"series\": {\n          \"id\": 10301332,\n          \"series_id\": \"0\",\n          \"creator\": \"irure in\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"consequat ea\",\n          \"description\": \"irure ut magna fugiat\",\n          \"image\": \"sed sit officia nostrud dolore\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"non quis reprehenderit velit\",\n          \"value\": \"sint do\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"nostrud ipsu\",\n          \"amount\": \"sit adipisicing enim Duis\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"sit deserunt est\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"fugiat Ut aliqua\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"deserunt pariatur\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"mollit do enim ut anim\",\n          \"market_id\": \"sunt\",\n          \"price\": \"fugiat\",\n          \"end_price\": \"culpa in nisi occaecat\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Circular reference to #/components/schemas/Organization detected>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"mollit et\",\n          \"sale_event_kind\": \"do\"\n        },\n        \"string_event\": {\n          \"string_value\": \"cupidatat\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"sit voluptate\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"nisi\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"address\": {\n        \"address\": \"magna aliquip Duis\",\n        \"address_name\": \"cillum\",\n        \"validator_kind\": \"reprehenderit officia anim dolore\",\n        \"stake\": \"in est enim\",\n        \"unclaimed\": \"nisi labore ut\",\n        \"relay\": \"irure\",\n        \"storage\": {\n          \"available\": -9540583,\n          \"used\": 56217927,\n          \"avatar\": \"pariatur sint tempor laborum\"\n        },\n        \"stakes\": {\n          \"amount\": \"aute ut tempor\",\n          \"time\": 52355803,\n          \"unclaimed\": \"in esse\"\n        },\n        \"balances\": [\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/organizations?order_by=id&order_direction=asc&offset=0&limit=50&organization_id=validators&organization_id_partial=valid&organization_name=Block Producers&organization_name_partial=Block Pro&with_creation_event=0&with_address=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"organizations"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "organization_id",
											"value": "validators"
										},
										{
											"key": "organization_id_partial",
											"value": "valid"
										},
										{
											"key": "organization_name",
											"value": "Block Producers"
										},
										{
											"key": "organization_name_partial",
											"value": "Block Pro"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_address",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/organizations?order_by=id&order_direction=asc&offset=0&limit=50&organization_id=validators&organization_id_partial=valid&organization_name=Block Producers&organization_name_partial=Block Pro&with_creation_event=0&with_address=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"organizations"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "organization_id",
											"value": "validators"
										},
										{
											"key": "organization_id_partial",
											"value": "valid"
										},
										{
											"key": "organization_name",
											"value": "Block Producers"
										},
										{
											"key": "organization_name_partial",
											"value": "Block Pro"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_address",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Platform on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"pm.test('Has platform values', function(){",
									"  pm.expect(jsonData).to.have.property(\"platforms\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/platforms?order_by=id&order_direction=asc&offset=0&limit=50&name=neo&with_external=0&with_interops=0&with_token=0&with_creation_event=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"platforms"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "name",
									"value": "neo",
									"description": "Platform name"
								},
								{
									"key": "with_external",
									"value": "0",
									"description": "Return Data with <a href=\"#model-External\">External</a>"
								},
								{
									"key": "with_interops",
									"value": "0",
									"description": "Return Data with <a href=\"#model-PlatformInterop\">Interops</a>"
								},
								{
									"key": "with_token",
									"value": "0",
									"description": "Return Data with <a href=\"#model-Token\">Token</a>"
								},
								{
									"key": "with_creation_event",
									"value": "0",
									"description": "Return data with <a href=\"#model-Event\">Event</a> of the creation"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-PlatformResult\">PlatformResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/platforms?order_by=id&order_direction=asc&offset=0&limit=50&name=neo&with_external=0&with_interops=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"platforms"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "name",
											"value": "neo"
										},
										{
											"key": "with_external",
											"value": "0"
										},
										{
											"key": "with_interops",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -99282899,\n  \"platforms\": [\n    {\n      \"name\": \"incididunt Excepteur aliqua ea\",\n      \"chain\": \"cupidatat\",\n      \"fuel\": \"laboris\",\n      \"externals\": [\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash\": \"ullamco\"\n        },\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash\": \"in ut\"\n        }\n      ],\n      \"platform_interops\": [\n        {\n          \"local_address\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"validator_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stake\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unclaimed\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"relay\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"storage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakes\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"balances\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"external_address\": \"fugiat qui nulla\"\n        },\n        {\n          \"local_address\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"validator_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stake\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unclaimed\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"relay\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"storage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakes\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"balances\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"external_address\": \"Duis et\"\n        }\n      ],\n      \"platform_tokens\": [\n        {\n          \"name\": \"consectetur qui id\"\n        },\n        {\n          \"name\": \"sunt q\"\n        }\n      ],\n      \"create_event\": {\n        \"event_id\": 80614111,\n        \"chain\": \"main\",\n        \"date\": \"ea Lorem occaecat\",\n        \"block_hash\": \"elit in proident sit\",\n        \"transaction_hash\": \"ea non culpa\",\n        \"token_id\": \"veniam enim\",\n        \"event_kind\": \"Ut\",\n        \"address\": \"aliqua dolor enim esse in\",\n        \"address_name\": \"voluptate elit cillum\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"dolor aliquip eu\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"anim labore tempor non quis\",\n          \"name\": \"eu\",\n          \"image\": \"amet exercitation\",\n          \"video\": \"do in\",\n          \"info_url\": \"eiusmod \",\n          \"rom\": \"exercitation nostrud\",\n          \"ram\": \"culpa dolore\",\n          \"mint_date\": \"in reprehenderit \",\n          \"mint_number\": \"dolore in officia\"\n        },\n        \"series\": {\n          \"id\": 44744279,\n          \"series_id\": \"0\",\n          \"creator\": \"nisi in\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"amet qui dolor non\",\n          \"description\": \"incididunt\",\n          \"image\": \"et\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"magna ut sunt in\",\n          \"value\": \"officia non ex\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"ut exercitati\",\n          \"amount\": \"Excepteur magna occaecat\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"eiusmod aute\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"ipsum\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"in consequat\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"reprehenderit dolore enim\",\n          \"market_id\": \"sed commodo c\",\n          \"price\": \"dolor\",\n          \"end_price\": \"laborum Lorem minim\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"adipisicing consequat labore\",\n          \"sale_event_kind\": \"non in\"\n        },\n        \"string_event\": {\n          \"string_value\": \"do amet anim\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"qui p\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"ad commodo in dolor\",\n          \"platform\": {\n            \"value\": \"<Circular reference to #/components/schemas/Platform detected>\"\n          }\n        }\n      }\n    },\n    {\n      \"name\": \"sed in labore aliqua\",\n      \"chain\": \"fugiat cillum ut voluptate\",\n      \"fuel\": \"dolor id non\",\n      \"externals\": [\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash\": \"Excepteur\"\n        },\n        {\n          \"token\": {\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fungible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"transferable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"finite\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"divisible\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fuel\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"swappable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burnable\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"decimals\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"burned_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token_logos\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash\": \"eu proident in nostrud\"\n        }\n      ],\n      \"platform_interops\": [\n        {\n          \"local_address\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"validator_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stake\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unclaimed\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"relay\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"storage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakes\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"balances\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"external_address\": \"dolor\"\n        },\n        {\n          \"local_address\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"validator_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stake\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"unclaimed\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"relay\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"storage\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"stakes\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"balances\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"external_address\": \"quis eiusmod non Excepteur anim\"\n        }\n      ],\n      \"platform_tokens\": [\n        {\n          \"name\": \"enim ipsum\"\n        },\n        {\n          \"name\": \"voluptate nulla in nisi\"\n        }\n      ],\n      \"create_event\": {\n        \"event_id\": 30692521,\n        \"chain\": \"main\",\n        \"date\": \"eiusmod quis\",\n        \"block_hash\": \"volupt\",\n        \"transaction_hash\": \"aliqua \",\n        \"token_id\": \"labori\",\n        \"event_kind\": \"laboris\",\n        \"address\": \"minim irure ipsum\",\n        \"address_name\": \"ut ipsum nisi in laboris\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"nulla ut\",\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"nulla officia ut occaecat elit\",\n          \"name\": \"do pariatur officia\",\n          \"image\": \"sed ea\",\n          \"video\": \"laborum proident commodo\",\n          \"info_url\": \"cillum eiusmod labore\",\n          \"rom\": \"fugiat labore irure qui tempor\",\n          \"ram\": \"ipsum\",\n          \"mint_date\": \"incididunt minim Lorem voluptate\",\n          \"mint_number\": \"anim nisi irure nostrud\"\n        },\n        \"series\": {\n          \"id\": -64050781,\n          \"series_id\": \"0\",\n          \"creator\": \"nisi fugiat reprehenderit dolor\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"aliquip ex sit fugiat dolore\",\n          \"description\": \"Ut aute velit\",\n          \"image\": \"commodo\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"magna\",\n          \"value\": \"occaecat adipisicing\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"Lorem eu exercitation nostrud\",\n          \"amount\": \"consectetur anim et aute\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"amet n\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"amet dolor ullamco sunt\",\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infused_value\": \"cupidatat in consequat\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event_kind\": \"commodo aliqua ea\",\n          \"market_id\": \"incididunt dolor eu reprehenderit\",\n          \"price\": \"aute culpa dolor\",\n          \"end_price\": \"deserunt laboris in \",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"commodo\",\n          \"sale_event_kind\": \"nulla nisi sint\"\n        },\n        \"string_event\": {\n          \"string_value\": \"cupidatat ut dolor\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"value\": \"incididunt pariatur ad\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"Lorem in eiusmod\",\n          \"platform\": {\n            \"value\": \"<Circular reference to #/components/schemas/Platform detected>\"\n          }\n        }\n      }\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/platforms?order_by=id&order_direction=asc&offset=0&limit=50&name=neo&with_external=0&with_interops=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"platforms"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "name",
											"value": "neo"
										},
										{
											"key": "with_external",
											"value": "0"
										},
										{
											"key": "with_interops",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/platforms?order_by=id&order_direction=asc&offset=0&limit=50&name=neo&with_external=0&with_interops=0&with_token=0&with_creation_event=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"platforms"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "name",
											"value": "neo"
										},
										{
											"key": "with_external",
											"value": "0"
										},
										{
											"key": "with_interops",
											"value": "0"
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search help.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has result values', function(){",
									"  //pm.expect(jsonData).has.property('result', 'RPM_Antenna_1');",
									"  pm.expect(jsonData).to.have.property(\"result\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/searches?value=soul",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"searches"
							],
							"query": [
								{
									"key": "value",
									"value": "soul",
									"description": "Will be checked if it is an Address, a Block, a Chain, a Contract, an Organization, a Platform or a\r\nToken"
								}
							]
						},
						"description": "<a href=\"#model-SearchResult\">SearchResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/searches?value=veniam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"searches"
									],
									"query": [
										{
											"key": "value",
											"value": "veniam"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"result\": [\n    {\n      \"endpoint_name\": \"veniam incididunt\",\n      \"endpoint_parameter\": \"ut E\",\n      \"found\": false\n    },\n    {\n      \"endpoint_name\": \"ad pariatur\",\n      \"endpoint_parameter\": \"tempor anim nulla voluptate\",\n      \"found\": true\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/searches?value=veniam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"searches"
									],
									"query": [
										{
											"key": "value",
											"value": "veniam"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/searches?value=veniam",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"searches"
									],
									"query": [
										{
											"key": "value",
											"value": "veniam"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns series of NFTs available on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has series values', function(){",
									"  pm.expect(jsonData).to.have.property(\"series\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/series?order_by=id&order_direction=asc&offset=0&limit=50&id=&series_id=&creator=&name=&chain=main&contract=SOUL&symbol=SOUL&token_id=&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"series"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id, series_id or name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "id",
									"value": "",
									"description": "Internal ID"
								},
								{
									"key": "series_id",
									"value": "",
									"description": "Series ID"
								},
								{
									"key": "creator",
									"value": "",
									"description": "Creator of series (Address)"
								},
								{
									"key": "name",
									"value": "",
									"description": "Series name/description filter (partial match)"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "contract",
									"value": "SOUL",
									"description": "Token contract hash"
								},
								{
									"key": "symbol",
									"value": "SOUL"
								},
								{
									"key": "token_id",
									"value": "",
									"description": "Token ID"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-SeriesResult\">SeriesResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/series?order_by=id&order_direction=asc&offset=0&limit=50&id=&series_id=&creator=&name=&chain=main&contract=SOUL&symbol=SOUL&token_id=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 45344318,\n  \"series\": [\n    {\n      \"id\": 27984734,\n      \"series_id\": \"0\",\n      \"creator\": \"\",\n      \"current_supply\": 2,\n      \"max_supply\": 52,\n      \"mode_name\": \"Duplicated\",\n      \"name\": \"dolore Ut magna minim\",\n      \"description\": \"occaecat amet\",\n      \"image\": \"irure non ipsum incididunt\",\n      \"royalties\": \"0\",\n      \"type\": 20,\n      \"attr_type_1\": \"Artist Name\",\n      \"attr_value_1\": \"Peter Painter\",\n      \"attr_type_2\": \"Location\",\n      \"attr_value_2\": \"Greenland\",\n      \"attr_type_3\": \"Size\",\n      \"attr_value_3\": \"1920x1080\"\n    },\n    {\n      \"id\": 39107537,\n      \"series_id\": \"0\",\n      \"creator\": \"exercitation nulla aliqua eu\",\n      \"current_supply\": 2,\n      \"max_supply\": 52,\n      \"mode_name\": \"Duplicated\",\n      \"name\": \"do voluptate\",\n      \"description\": \"ullamco consequat magna Duis\",\n      \"image\": \"do ullamco in aliquip\",\n      \"royalties\": \"0\",\n      \"type\": 20,\n      \"attr_type_1\": \"Artist Name\",\n      \"attr_value_1\": \"Peter Painter\",\n      \"attr_type_2\": \"Location\",\n      \"attr_value_2\": \"Greenland\",\n      \"attr_type_3\": \"Size\",\n      \"attr_value_3\": \"1920x1080\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/series?order_by=id&order_direction=asc&offset=0&limit=50&id=&series_id=&creator=&name=&chain=main&contract=SOUL&symbol=SOUL&token_id=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/series?order_by=id&order_direction=asc&offset=0&limit=50&id=&series_id=&creator=&name=&chain=main&contract=SOUL&symbol=SOUL&token_id=&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"series"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "id",
											"value": ""
										},
										{
											"key": "series_id",
											"value": ""
										},
										{
											"key": "creator",
											"value": ""
										},
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "contract",
											"value": "SOUL"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "token_id",
											"value": ""
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the token on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"const jsonData = pm.response.json();",
									"pm.test('Has token values', function(){",
									"  pm.expect(jsonData).to.have.property(\"tokens\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tokens?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&chain=main&with_price=0&with_creation_event=0&with_logo=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tokens"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or symbol"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "symbol",
									"value": "SOUL"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_price",
									"value": "0",
									"description": "Return data with <a href=\"#model-Price\">Prices</a>"
								},
								{
									"key": "with_creation_event",
									"value": "0",
									"description": "Return data with <a href=\"#model-Event\">Event</a> of the creation"
								},
								{
									"key": "with_logo",
									"value": "0",
									"description": "Return data with <a href=\"#model-TokenLogo\">Logo</a> Information"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "Returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-TokenResult\">TokenResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tokens?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&chain=main&with_price=0&with_creation_event=0&with_logo=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_price",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_logo",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 21151498,\n  \"tokens\": [\n    {\n      \"symbol\": \"SOUL\",\n      \"fungible\": true,\n      \"transferable\": true,\n      \"finite\": false,\n      \"divisible\": true,\n      \"fuel\": false,\n      \"stakable\": true,\n      \"fiat\": false,\n      \"swappable\": true,\n      \"burnable\": true,\n      \"decimals\": 8,\n      \"current_supply\": \"incididunt enim elit minim ex\",\n      \"max_supply\": \"Lorem\",\n      \"burned_supply\": \"sint anim aliqua veniam Ut\",\n      \"script_raw\": \"non nulla labore\",\n      \"price\": {\n        \"usd\": -21133125.23159188,\n        \"eur\": -31765201.75896381,\n        \"gbp\": -47564125.634668075,\n        \"jpy\": -61778565.19320026,\n        \"cad\": 34613188.801764905,\n        \"aud\": -58120410.99723224,\n        \"cny\": -4811807.171458676,\n        \"rub\": 71523170.34664595\n      },\n      \"create_event\": {\n        \"event_id\": 17032593,\n        \"chain\": \"main\",\n        \"date\": \"irure eni\",\n        \"block_hash\": \"commodo veniam\",\n        \"transaction_hash\": \"laboris consequat non\",\n        \"token_id\": \"consectetur\",\n        \"event_kind\": \"ut pariatur laborum sed ullamco\",\n        \"address\": \"Ut in\",\n        \"address_name\": \"irure dol\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"ut ut culpa aute\",\n          \"token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"consectetur officia\",\n          \"name\": \"amet occaecat officia\",\n          \"image\": \"aliqua sed enim \",\n          \"video\": \"commodo ad sunt\",\n          \"info_url\": \"sunt minim\",\n          \"rom\": \"nulla\",\n          \"ram\": \"occaecat voluptate Lorem incididunt esse\",\n          \"mint_date\": \"pariatur eu\",\n          \"mint_number\": \"non ex\"\n        },\n        \"series\": {\n          \"id\": 65240623,\n          \"series_id\": \"0\",\n          \"creator\": \"velit incididunt qui ut\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"eiusmod ullamco ipsum\",\n          \"description\": \"dolor cupidatat\",\n          \"image\": \"dolore in pariatur ad\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"qui quis tempor\",\n          \"value\": \"minim\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"dolore ut\",\n          \"amount\": \"quis Ut ad\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"veniam sit\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"sunt occaecat magna dolore reprehenderit\",\n          \"base_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"infused_value\": \"exercitation sit\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"market_event_kind\": \"aliquip ut magna ullamco\",\n          \"market_id\": \"sint do\",\n          \"price\": \"sed\",\n          \"end_price\": \"voluptate deserunt cillum\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"amet\",\n          \"sale_event_kind\": \"irure id occ\"\n        },\n        \"string_event\": {\n          \"string_value\": \"labore eu do\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"value\": \"Lorem quis\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"cupidatat ut ex officia in\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"token_logos\": [\n        {\n          \"type\": \"aliquip non co\",\n          \"url\": \"cillum pariatur\"\n        },\n        {\n          \"type\": \"dolore cillum\",\n          \"url\": \"esse Ut fugiat amet officia\"\n        }\n      ]\n    },\n    {\n      \"symbol\": \"SOUL\",\n      \"fungible\": true,\n      \"transferable\": false,\n      \"finite\": false,\n      \"divisible\": false,\n      \"fuel\": true,\n      \"stakable\": true,\n      \"fiat\": false,\n      \"swappable\": false,\n      \"burnable\": false,\n      \"decimals\": 8,\n      \"current_supply\": \"l\",\n      \"max_supply\": \"dolore nulla aute dolore ull\",\n      \"burned_supply\": \"dolore cupidatat Lorem in do\",\n      \"script_raw\": \"nostru\",\n      \"price\": {\n        \"usd\": 75658097.13088182,\n        \"eur\": -92434596.36846319,\n        \"gbp\": -82848472.44690439,\n        \"jpy\": 89203506.48474792,\n        \"cad\": 37268336.831358224,\n        \"aud\": 46492905.17390922,\n        \"cny\": -39416070.62608505,\n        \"rub\": 70334193.81738287\n      },\n      \"create_event\": {\n        \"event_id\": -32145683,\n        \"chain\": \"main\",\n        \"date\": \"incididunt laboris ut\",\n        \"block_hash\": \"ex dolor velit\",\n        \"transaction_hash\": \"labore velit amet ullamco\",\n        \"token_id\": \"sunt\",\n        \"event_kind\": \"proident quis\",\n        \"address\": \"proident \",\n        \"address_name\": \"cupidatat minim\",\n        \"contract\": {\n          \"name\": \"SOUL\",\n          \"hash\": \"SOUL\",\n          \"symbol\": \"SOUL\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"script_raw\": \"veniam aliqua se\",\n          \"token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"methods\": {},\n          \"create_event\": {\n            \"value\": \"<Circular reference to #/components/schemas/Event detected>\"\n          }\n        },\n        \"nft_metadata\": {\n          \"description\": \"sunt ali\",\n          \"name\": \"aliqua qui fugiat\",\n          \"image\": \"consectetur ut quis \",\n          \"video\": \"aliqua minim Ut\",\n          \"info_url\": \"sit Ut nisi\",\n          \"rom\": \"ut minim qui aliquip\",\n          \"ram\": \"dolore in adipisicing \",\n          \"mint_date\": \"consequat Excepteur\",\n          \"mint_number\": \"labore proident Lorem Excepteur in\"\n        },\n        \"series\": {\n          \"id\": -62622586,\n          \"series_id\": \"0\",\n          \"creator\": \"in\",\n          \"current_supply\": 2,\n          \"max_supply\": 52,\n          \"mode_name\": \"Duplicated\",\n          \"name\": \"officia voluptate\",\n          \"description\": \"eiusmod amet d\",\n          \"image\": \"irure tempor non sint\",\n          \"royalties\": \"0\",\n          \"type\": 20,\n          \"attr_type_1\": \"Artist Name\",\n          \"attr_value_1\": \"Peter Painter\",\n          \"attr_type_2\": \"Location\",\n          \"attr_value_2\": \"Greenland\",\n          \"attr_type_3\": \"Size\",\n          \"attr_value_3\": \"1920x1080\"\n        },\n        \"address_event\": {\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"chain_event\": {\n          \"name\": \"deserunt nulla dolore labore \",\n          \"value\": \"sunt ut laboris velit Duis\",\n          \"chain\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"gas_event\": {\n          \"price\": \"quis adipi\",\n          \"amount\": \"in dolor et\",\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"hash_event\": {\n          \"hash\": \"anim in aliquip nisi sint\"\n        },\n        \"infusion_event\": {\n          \"token_id\": \"cillum sit\",\n          \"base_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"infused_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"infused_value\": \"dolore amet\"\n        },\n        \"market_event\": {\n          \"base_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"quote_token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"market_event_kind\": \"fugiat adipisicing\",\n          \"market_id\": \"dolor \",\n          \"price\": \"nostrud\",\n          \"end_price\": \"dolor voluptate\",\n          \"fiat_price\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"organization_event\": {\n          \"organization\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"sale_event\": {\n          \"hash\": \"sunt pariatur deserunt tempor nisi\",\n          \"sale_event_kind\": \"veniam in aute\"\n        },\n        \"string_event\": {\n          \"string_value\": \"ullamco id al\"\n        },\n        \"token_event\": {\n          \"token\": {\n            \"value\": \"<Circular reference to #/components/schemas/Token detected>\"\n          },\n          \"value\": \"aliqua Duis id\",\n          \"chain_name\": \"main\"\n        },\n        \"transaction_settle_event\": {\n          \"hash\": \"aliquip ad eiusmod\",\n          \"platform\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        }\n      },\n      \"token_logos\": [\n        {\n          \"type\": \"aliqua qui laboris ullamco\",\n          \"url\": \"s\"\n        },\n        {\n          \"type\": \"consectetur incididunt in do\",\n          \"url\": \"sit cillum dolor ea sed\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tokens?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&chain=main&with_price=0&with_creation_event=0&with_logo=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_price",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_logo",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tokens?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&chain=main&with_price=0&with_creation_event=0&with_logo=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tokens"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_price",
											"value": "0"
										},
										{
											"key": "with_creation_event",
											"value": "0"
										},
										{
											"key": "with_logo",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Token Price History on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has history_prices values', function(){",
									"  pm.expect(jsonData).to.have.property(\"history_prices\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/historyprices?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&date_less=&date_greater=&with_token=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"historyprices"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "symbol",
									"value": "SOUL"
								},
								{
									"key": "date_less",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "date_greater",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "with_token",
									"value": "0",
									"description": "Return Data with <a href=\"#model-Token\">Token</a>"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-HistoryPriceResult\">HistoryPriceResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/historyprices?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&date_less=&date_greater=&with_token=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"historyprices"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 76566617,\n  \"history_prices\": [\n    {\n      \"symbol\": \"SOUL\",\n      \"token\": {\n        \"symbol\": \"SOUL\",\n        \"fungible\": true,\n        \"transferable\": false,\n        \"finite\": false,\n        \"divisible\": true,\n        \"fuel\": true,\n        \"stakable\": true,\n        \"fiat\": false,\n        \"swappable\": true,\n        \"burnable\": true,\n        \"decimals\": 8,\n        \"current_supply\": \"velit\",\n        \"max_supply\": \"sed veniam esse voluptate\",\n        \"burned_supply\": \"ad\",\n        \"script_raw\": \"laboris nisi aliqua ut proident\",\n        \"price\": {\n          \"usd\": -99793772.45886019,\n          \"eur\": -66446566.1856823,\n          \"gbp\": 43417965.50007272,\n          \"jpy\": 58525564.70321876,\n          \"cad\": -45892914.92090446,\n          \"aud\": -17789281.314980477,\n          \"cny\": 32813898.229609072,\n          \"rub\": -67925677.58656949\n        },\n        \"create_event\": {\n          \"event_id\": -95952175,\n          \"chain\": \"main\",\n          \"date\": \"Excepteur\",\n          \"block_hash\": \"qui quis\",\n          \"transaction_hash\": \"ipsum\",\n          \"token_id\": \"qui sed ipsum eiusmod\",\n          \"event_kind\": \"sed esse\",\n          \"address\": \"dolore cupidatat reprehenderit ad\",\n          \"address_name\": \"eu proident elit laborum\",\n          \"contract\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"token_logos\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"price\": {\n        \"usd\": 74908409.94874558,\n        \"eur\": 38444409.69565213,\n        \"gbp\": 45038462.56638405,\n        \"jpy\": -70123330.26620157,\n        \"cad\": 51584686.94800559,\n        \"aud\": -81336816.58978996,\n        \"cny\": -76913136.16109428,\n        \"rub\": 47115215.07026023\n      },\n      \"date\": \"veniam labor\"\n    },\n    {\n      \"symbol\": \"SOUL\",\n      \"token\": {\n        \"symbol\": \"SOUL\",\n        \"fungible\": false,\n        \"transferable\": true,\n        \"finite\": true,\n        \"divisible\": true,\n        \"fuel\": true,\n        \"stakable\": true,\n        \"fiat\": false,\n        \"swappable\": true,\n        \"burnable\": false,\n        \"decimals\": 8,\n        \"current_supply\": \"cupidatat\",\n        \"max_supply\": \"ve\",\n        \"burned_supply\": \"ut do in\",\n        \"script_raw\": \"in nisi incididunt dolor consectetur\",\n        \"price\": {\n          \"usd\": 37359470.89126998,\n          \"eur\": 85401085.79151428,\n          \"gbp\": -33623797.44824708,\n          \"jpy\": 76484358.23847693,\n          \"cad\": -82856318.31492464,\n          \"aud\": -41921122.52616305,\n          \"cny\": -86099137.4039831,\n          \"rub\": -8844948.734828323\n        },\n        \"create_event\": {\n          \"event_id\": 15172722,\n          \"chain\": \"main\",\n          \"date\": \"aliquip occaecat exercitation minim do\",\n          \"block_hash\": \"do sint occaecat\",\n          \"transaction_hash\": \"culpa esse ut\",\n          \"token_id\": \"eu\",\n          \"event_kind\": \"ex officia eu enim magna\",\n          \"address\": \"reprehenderit ut exercitation ut\",\n          \"address_name\": \"consequat enim\",\n          \"contract\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"nft_metadata\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"series\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"address_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"chain_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"gas_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"hash_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"infusion_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"market_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"organization_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"sale_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"string_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"token_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          },\n          \"transaction_settle_event\": {\n            \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n          }\n        },\n        \"token_logos\": [\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ]\n      },\n      \"price\": {\n        \"usd\": 93815898.14710215,\n        \"eur\": -55675976.418315455,\n        \"gbp\": 38451279.760875195,\n        \"jpy\": 19121065.88655567,\n        \"cad\": 35813846.047094226,\n        \"aud\": 6300098.490855977,\n        \"cny\": 10333647.527204886,\n        \"rub\": 53321294.924557894\n      },\n      \"date\": \"anim Duis ex exercitation est\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/historyprices?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&date_less=&date_greater=&with_token=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"historyprices"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/historyprices?order_by=id&order_direction=asc&offset=0&limit=50&symbol=SOUL&date_less=&date_greater=&with_token=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"historyprices"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "symbol",
											"value": "SOUL"
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "with_token",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the Transaction Information on the backend",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has transaction values', function(){",
									"  pm.expect(jsonData).to.have.property(\"transactions\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/transactions?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&address=&date_less=&date_greater=&block_hash=&block_height=&chain=main&with_nft=0&with_events=0&with_event_data=0&with_fiat=0&with_script=0&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"transactions"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or hash"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "hash",
									"value": "",
									"description": "<a href=\"#model-Transaction\">Transaction</a> hash"
								},
								{
									"key": "hash_partial",
									"value": "",
									"description": "<a href=\"#model-Transaction\">Transaction</a> hash (partial match)"
								},
								{
									"key": "address",
									"value": "",
									"description": "Address (Hash)"
								},
								{
									"key": "date_less",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "date_greater",
									"value": "",
									"description": "Date (greater than), UTC unixseconds"
								},
								{
									"key": "block_hash",
									"value": "",
									"description": "<a href=\"#model-Block\">Block</a> hash"
								},
								{
									"key": "block_height",
									"value": "",
									"description": "height of the <a href=\"#model-Block\">Block</a>"
								},
								{
									"key": "chain",
									"value": "main",
									"description": "Chain name"
								},
								{
									"key": "with_nft",
									"value": "0",
									"description": "Return data with <a href=\"#model-NftMetadata\">nft metadata</a>"
								},
								{
									"key": "with_events",
									"value": "0",
									"description": "Return event data of <a href=\"#model-EventsResult\">events</a>"
								},
								{
									"key": "with_event_data",
									"value": "0",
									"description": "Return event data with more details, needs with_events to be set"
								},
								{
									"key": "with_fiat",
									"value": "0",
									"description": "Return with <a href=\"#model-FiatPrice\">fiat_prices</a> (only\r\n<a href=\"#model-MarketEvent\">market_event</a>)"
								},
								{
									"key": "with_script",
									"value": "0",
									"description": "Return with script data"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-TransactionResult\">TransactionResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/transactions?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&address=&date_less=&date_greater=&block_hash=&block_height=&chain=main&with_nft=0&with_events=0&with_event_data=0&with_fiat=0&with_script=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"transactions"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": 69739312,\n  \"transactions\": [\n    {\n      \"hash\": \"tempor laboris pariatur labore\",\n      \"block_hash\": \"nostrud nulla culpa\",\n      \"block_height\": \"officia eiusmod\",\n      \"index\": 32477476,\n      \"date\": \"do eiusmod\",\n      \"fee\": \"non\",\n      \"script_raw\": \"sed velit labore voluptate\",\n      \"result\": \"incididunt esse adipisicing\",\n      \"payload\": \"adipisicing velit\",\n      \"expiration\": \"veniam aute\",\n      \"events\": [\n        {\n          \"event_id\": -74693212,\n          \"chain\": \"main\",\n          \"date\": \"Duis eu\",\n          \"block_hash\": \"Duis si\",\n          \"transaction_hash\": \"do\",\n          \"token_id\": \"sit elit\",\n          \"event_kind\": \"reprehenderit Excepte\",\n          \"address\": \"proident occaecat dolore dolor\",\n          \"address_name\": \"sit Lorem\",\n          \"contract\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"methods\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"nft_metadata\": {\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"video\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info_url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rom\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ram\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_date\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"series\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"series_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"creator\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mode_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"royalties\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"address_event\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain_event\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"gas_event\": {\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"infusion_event\": {\n            \"token_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"market_event\": {\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quote_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"organization_event\": {\n            \"organization\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sale_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sale_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"string_event\": {\n            \"string_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"token_event\": {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"transaction_settle_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"platform\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"event_id\": -57035267,\n          \"chain\": \"main\",\n          \"date\": \"aliquip elit ea\",\n          \"block_hash\": \"ut ullamco reprehenderit Ut amet\",\n          \"transaction_hash\": \"et ad commodo culpa pariatur\",\n          \"token_id\": \"ullamco cillum\",\n          \"event_kind\": \"in\",\n          \"address\": \"tempor cupidatat velit mollit\",\n          \"address_name\": \"mollit ut cupidatat Excepteur\",\n          \"contract\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"methods\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"nft_metadata\": {\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"video\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info_url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rom\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ram\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_date\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"series\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"series_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"creator\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mode_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"royalties\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"address_event\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain_event\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"gas_event\": {\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"infusion_event\": {\n            \"token_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"market_event\": {\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quote_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"organization_event\": {\n            \"organization\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sale_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sale_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"string_event\": {\n            \"string_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"token_event\": {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"transaction_settle_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"platform\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"hash\": \"eu dolor consequat\",\n      \"block_hash\": \"et in\",\n      \"block_height\": \"ut minim irure\",\n      \"index\": 78268718,\n      \"date\": \"aliqua Lorem\",\n      \"fee\": \"ut non irure Duis sunt\",\n      \"script_raw\": \"labore irure ea\",\n      \"result\": \"in Excepteu\",\n      \"payload\": \"officia Lorem labore\",\n      \"expiration\": \"Excepteur ullamco\",\n      \"events\": [\n        {\n          \"event_id\": -69133118,\n          \"chain\": \"main\",\n          \"date\": \"Duis mollit ullamco\",\n          \"block_hash\": \"ad officia nulla\",\n          \"transaction_hash\": \"Excepteur irure occaecat sit cillum\",\n          \"token_id\": \"voluptate incididunt\",\n          \"event_kind\": \"laboris laborum aliqua\",\n          \"address\": \"consectetur off\",\n          \"address_name\": \"adipisicing id \",\n          \"contract\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"methods\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"nft_metadata\": {\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"video\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info_url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rom\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ram\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_date\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"series\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"series_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"creator\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mode_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"royalties\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"address_event\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain_event\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"gas_event\": {\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"infusion_event\": {\n            \"token_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"market_event\": {\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quote_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"organization_event\": {\n            \"organization\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sale_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sale_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"string_event\": {\n            \"string_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"token_event\": {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"transaction_settle_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"platform\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        },\n        {\n          \"event_id\": 95835971,\n          \"chain\": \"main\",\n          \"date\": \"est volupt\",\n          \"block_hash\": \"nisi in Excepteur\",\n          \"transaction_hash\": \"Ut nisi aliquip\",\n          \"token_id\": \"in esse dolore nulla\",\n          \"event_kind\": \"incididunt ullamco ipsum Duis\",\n          \"address\": \"dolor ex\",\n          \"address_name\": \"commodo est\",\n          \"contract\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"symbol\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"script_raw\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"methods\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"create_event\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"nft_metadata\": {\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"video\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"info_url\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"rom\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"ram\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_date\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mint_number\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"series\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"series_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"creator\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"current_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"max_supply\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"mode_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"description\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"image\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"royalties\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"type\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_1\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_2\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_type_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"attr_value_3\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"address_event\": {\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"chain_event\": {\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"gas_event\": {\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"amount\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"hash_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"infusion_event\": {\n            \"token_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"infused_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"market_event\": {\n            \"base_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"quote_token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"market_id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"end_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"fiat_price\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"organization_event\": {\n            \"organization\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"address\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"sale_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"sale_event_kind\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"string_event\": {\n            \"string_value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"token_event\": {\n            \"token\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"value\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"chain_name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"transaction_settle_event\": {\n            \"hash\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"platform\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/transactions?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&address=&date_less=&date_greater=&block_hash=&block_height=&chain=main&with_nft=0&with_events=0&with_event_data=0&with_fiat=0&with_script=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"transactions"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/transactions?order_by=id&order_direction=asc&offset=0&limit=50&hash=&hash_partial=&address=&date_less=&date_greater=&block_hash=&block_height=&chain=main&with_nft=0&with_events=0&with_event_data=0&with_fiat=0&with_script=0&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"transactions"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "hash",
											"value": ""
										},
										{
											"key": "hash_partial",
											"value": ""
										},
										{
											"key": "address",
											"value": ""
										},
										{
											"key": "date_less",
											"value": ""
										},
										{
											"key": "date_greater",
											"value": ""
										},
										{
											"key": "block_hash",
											"value": ""
										},
										{
											"key": "block_height",
											"value": ""
										},
										{
											"key": "chain",
											"value": "main"
										},
										{
											"key": "with_nft",
											"value": "0"
										},
										{
											"key": "with_events",
											"value": "0"
										},
										{
											"key": "with_event_data",
											"value": "0"
										},
										{
											"key": "with_fiat",
											"value": "0"
										},
										{
											"key": "with_script",
											"value": "0"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Returns the ValidatorKinds on the backend.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"pm.test('Has validator kind values', function(){",
									"  pm.expect(jsonData).to.have.property(\"validator_kinds\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/validatorkinds?order_by=id&order_direction=asc&offset=0&limit=50&validator_kind=Invalid&with_total=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"validatorkinds"
							],
							"query": [
								{
									"key": "order_by",
									"value": "id",
									"description": "accepted values are id or name"
								},
								{
									"key": "order_direction",
									"value": "asc",
									"description": "accepted values are asc or desc"
								},
								{
									"key": "offset",
									"value": "0",
									"description": "positive numeric value, represents the value how many values should be skipped"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "how many values will max be pulled"
								},
								{
									"key": "validator_kind",
									"value": "Invalid",
									"description": "validatorKind name"
								},
								{
									"key": "with_total",
									"value": "0",
									"description": "returns data with total_count (slower) or not (faster)"
								}
							]
						},
						"description": "<a href=\"#model-ValidatorKindResult\">ValidatorKindResult</a>"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validatorkinds?order_by=id&order_direction=asc&offset=0&limit=50&validator_kind=Invalid&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validatorkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "validator_kind",
											"value": "Invalid"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"total_results\": -37527394,\n  \"validator_kinds\": [\n    {\n      \"name\": \"veniam cupidatat Duis incididunt\"\n    },\n    {\n      \"name\": \"deserunt sit anim dolore\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validatorkinds?order_by=id&order_direction=asc&offset=0&limit=50&validator_kind=Invalid&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validatorkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "validator_kind",
											"value": "Invalid"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Internal Server Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/validatorkinds?order_by=id&order_direction=asc&offset=0&limit=50&validator_kind=Invalid&with_total=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"validatorkinds"
									],
									"query": [
										{
											"key": "order_by",
											"value": "id"
										},
										{
											"key": "order_direction",
											"value": "asc"
										},
										{
											"key": "offset",
											"value": "0"
										},
										{
											"key": "limit",
											"value": "50"
										},
										{
											"key": "validator_kind",
											"value": "Invalid"
										},
										{
											"key": "with_total",
											"value": "0"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test(\"response should be okay to process\", function () {",
					"    pm.response.to.not.be.error;",
					"    pm.response.to.not.have.jsonBody(\"error\");",
					"});",
					"",
					"pm.test(\"response is json\", function () {",
					"    pm.response.to.be.ok;",
					"    pm.response.to.be.json;",
					"});",
					"",
					"pm.test(\"Response time is less than 2000ms\", () => {",
					"  pm.expect(pm.response.responseTime).to.be.below(2000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.phantasma.io:8001",
			"type": "string"
		}
	]
}
